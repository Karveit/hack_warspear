Call stack of main thread
Address    Returns to    Procedure / arguments                 Called from                   Frame      Stack Dump
0018F9B4   00856482      WS2_32.send                           warspear.0085647C             0018F9F8   000005C0 0C0C90E
0018F9B8   000005C0        Socket = 5C0
0018F9BC   0C0C90E0        Data = 0C0C90E0
0018F9C0   00000006        DataSize = 6
0018F9C4   00000000        Flags = 0
0018F9FC   008418A6      warspear.008563D0                     warspear.008418A3             0018F9F8   2934B0B1 0096FC1
0018FA14   0084EEF4      warspear.00841870                     warspear.0084EEEF             0018FA10
0018FA44   00832ECB      warspear.0084EDD0                     warspear.00832EC6             0018FA40
0018FA5C   7761630A      warspear.00832E30                     USER32.77616307               0018FA58   004B1B3A 0000011
0018FA60   004B1B3A        Arg1 = 004B1B3A
0018FA64   00000113        Arg2 = 00000113
0018FA68   00000000        Arg3 = 00000000
0018FA6C   2934B0B1        Arg4 = 2934B0B1
0018FA98   00000000      *** CORRUPT ENTRY ***                                               0018FA84

readMemory
Log data, item 84
 Address=0BADF00D
 Message=len:30, ret:[173, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 173, 1, 8, 1, 0, 0, 0, 1, 0, 0, 0, 20, 2, 1, 0, 20, 2, 0, 0]
Log data, item 40
 Address=0BADF00D
 Message=len:30, ret:[173, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 173, 1, 8, 1, 0, 0, 0, 1, 0, 0, 0, 20, 2, 1, 0, 20, 2, 0, 0]
Log data, item 41
 Address=0BADF00D
 Message=len:30, ret:[173, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 173, 1, 8, 1, 0, 0, 0, 1, 0, 0, 0, 20, 2, 1, 0, 20, 2, 0, 0]

 Log data, item 2
 Address=0BADF00D
 Message=len:19, ret:[173, 1, 8, 0, 0, 0, 0, 1, 0, 0, 0, 20, 2, 1, 0, 20, 2, 0, 0]

 
0BADF00D   0x0018F9B4 WS2_32.send 0x0085647C 0x0018F9F8 [0x000008D4 0x10130A58 0x0000001E]
0BADF00D   0x0018F9B8   Socket = 8D4 0x0085647C 0x0018F9F8 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018F9BC   Data = 10130A58 0x0085647C 0x0018F9F8 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018F9C0   DataSize = 1E (30.) 0x0085647C 0x0018F9F8 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018F9C4   Flags = 0 0x0085647C 0x0018F9F8 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018F9FC warspear.008563D0 0x008418A3 0x0018F9F8 [0x29E83271 0x0096FC10 0x00000000]
0BADF00D   0x0018FA14 warspear.00841870 0x0084EED7 0x0018FA10 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018FA44 ? warspear.0084EDD0 0x00832EC6 0x0018FA40 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018FA5C warspear.00832E30 0x77616307 0x0018FA58 [0x004B1B3A 0x00000113 0x00000000]
0BADF00D   0x0018FA60   Arg1 = 004B1B3A 0x77616307 0x0018FA58 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018FA64   Arg2 = 00000113 0x77616307 0x0018FA58 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018FA68   Arg3 = 00000000 0x77616307 0x0018FA58 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018FA6C   Arg4 = 29E83271 0x77616307 0x0018FA58 [0x00000000 0x00000000 0x00000000]
0BADF00D   0x0018FA98 Includes USER32.7761630A 0x00000000 0x0018FA84 [0x00000000 0x00000000 0x00000000]


00402116 - 88 08  - mov [eax],cl
0085A812 - 88 11  - mov [ecx],dl

00402116 - 88 08  - mov [eax],cl


77a187->775224->73f675->73fca7->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
9, e4715c8, 77a187 
77a187->775224->73f675->73fca7->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
9, e4715c8, 77a187 
77a187->775224->73f675->73fca7->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
9, e4715c8, 77a187 
77a187->7753ca->73f23e->73fd11->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
e, e4715c8, 77a187 
77a187->77553a->73f10c->73fd3f->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
9, e4715c8, 77a187 
77a187->7774ea->6c7234->6c8900->6c9612->7bc205->77a217->781dcc->77a3b0->7911b7-> 
b, e4715c8, 77a187 
77a187->7774ea->6c7234->6c8900->6c9612->7bc205->77a217->781dcc->77a3b0->7911b7-> 
b, e4715c8, 77a187 
77a187->6c7335->6c8900->6c9612->7bc205->77a217->781dcc->77a3b0->7911b7->71d2c8-> 
4, e4715c8, 77a187 
77a187->6c76b8->6c9792->7bc6a8->6c8900->6c9612->7bc205->77a217->781dcc->77a3b0-> 
4, e4715c8, 77a187 
77a187->775224->73f675->73fca7->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
9, e4715c8, 77a187 
77a187->775224->73f675->73fca7->73fb56->5a9338->781db8->7bc2d5->5a98a0->79129d-> 
9, e4715c8, 77a187 

85a800->82fc88->77d3f4->77e087->6ca1c8->6cc2a2->7c0ca8->6cb410->6cc122->7c0805->77e117->785ccc->77e2b0->795627->7204a8-> 
ebx:1e 


0077E0A0  /$ 56             PUSH ESI
0077E0A1  |. 8BF1           MOV ESI,ECX
0077E0A3  |. 0FBF4E 38      MOVSX ECX,WORD PTR DS:[ESI+38]
0077E0A7  |. 8BC1           MOV EAX,ECX
0077E0A9  |. C1E8 02        SHR EAX,2
0077E0AC  |. A8 01          TEST AL,1
0077E0AE  |. 75 7E          JNZ SHORT warspear.0077E12E
0077E0B0  |. 8BC1           MOV EAX,ECX
0077E0B2  |. C1E8 03        SHR EAX,3
0077E0B5  |. A8 01          TEST AL,1
0077E0B7  |. 75 75          JNZ SHORT warspear.0077E12E
0077E0B9  |. F646 38 01     TEST BYTE PTR DS:[ESI+38],1
0077E0BD  |. 75 6F          JNZ SHORT warspear.0077E12E
0077E0BF  |. D1E9           SHR ECX,1
0077E0C1  |. F6C1 01        TEST CL,1
0077E0C4  |. 75 68          JNZ SHORT warspear.0077E12E
0077E0C6  |. 57             PUSH EDI
0077E0C7  |. 8B7E 70        MOV EDI,DWORD PTR DS:[ESI+70]
0077E0CA  |. 85FF           TEST EDI,EDI
0077E0CC  |. 74 30          JE SHORT warspear.0077E0FE
0077E0CE  |. 8B8E 84000000  MOV ECX,DWORD PTR DS:[ESI+84]
0077E0D4  |. 85C9           TEST ECX,ECX
0077E0D6  |. 75 0C          JNZ SHORT warspear.0077E0E4
0077E0D8  |. 8B4E 7C        MOV ECX,DWORD PTR DS:[ESI+7C]
0077E0DB  |. 8B46 78        MOV EAX,DWORD PTR DS:[ESI+78]
0077E0DE  |. 03CF           ADD ECX,EDI
0077E0E0  |. FFD0           CALL EAX
0077E0E2  |. EB 33          JMP SHORT warspear.0077E117
0077E0E4  |> 8B96 80000000  MOV EDX,DWORD PTR DS:[ESI+80]
0077E0EA  |. 8B043A         MOV EAX,DWORD PTR DS:[EDX+EDI]
0077E0ED  |. 8B0C08         MOV ECX,DWORD PTR DS:[EAX+ECX]
0077E0F0  |. 034E 7C        ADD ECX,DWORD PTR DS:[ESI+7C]
0077E0F3  |. 8B46 78        MOV EAX,DWORD PTR DS:[ESI+78]
0077E0F6  |. 03CA           ADD ECX,EDX
0077E0F8  |. 03CF           ADD ECX,EDI
0077E0FA  |. FFD0           CALL EAX
0077E0FC  |. EB 19          JMP SHORT warspear.0077E117
0077E0FE  |> 8B4E 5C        MOV ECX,DWORD PTR DS:[ESI+5C]
0077E101  |. 85C9           TEST ECX,ECX
0077E103  |. 74 08          JE SHORT warspear.0077E10D
0077E105  |. 8B01           MOV EAX,DWORD PTR DS:[ECX]
0077E107  |. 6A 64          PUSH 64
0077E109  |. 56             PUSH ESI
0077E10A  |. FF50 04        CALL DWORD PTR DS:[EAX+4]
0077E10D  |> 8B06           MOV EAX,DWORD PTR DS:[ESI]
0077E10F  |. 6A 64          PUSH 64
0077E111  |. 56             PUSH ESI
0077E112  |. 8BCE           MOV ECX,ESI
0077E114  |. FF50 18        CALL DWORD PTR DS:[EAX+18]
0077E117  |> 8B06           MOV EAX,DWORD PTR DS:[ESI]
0077E119  |. 8BCE           MOV ECX,ESI
0077E11B  |. FF50 54        CALL DWORD PTR DS:[EAX+54]
0077E11E  |. 8B46 68        MOV EAX,DWORD PTR DS:[ESI+68]
0077E121  |. 5F             POP EDI
0077E122  |. 85C0           TEST EAX,EAX
0077E124  |. 74 08          JE SHORT warspear.0077E12E
0077E126  |. FF76 64        PUSH DWORD PTR DS:[ESI+64]
0077E129  |. FFD0           CALL EAX
0077E12B  |. 83C4 04        ADD ESP,4
0077E12E  |> 5E             POP ESI
0077E12F  \. C3             RETN
--mov     ecx, offset dword_96FC10
        local a = 0x974C58
--mov     ecx, [eax+0Ch]
        a = readInteger(a+0xc)
        print(a)
--mov     eax, [ecx]
          a = readInteger(a)
        print(a)
--mov     edx, [eax+74h]
        a = readInteger(a + 0x74)
        print(a)
--mov     ecx, [eax+40h]
        a = readInteger(a + 0x40)
        print(a)
--add     ecx, 56ACh
        a = a + 0x5628
        print(a)
--mov     edx, [ebx+1884h]
        a = readInteger(a + 0x1884)
        print(a)

785ccc->77e2b0->795627->7204a8->83ebec->852797->4b2f98->837491->7761630a->77617b26->776179d7->7761789a->837236->836ae6->4d8f38->

00795226 - 89 81 84180000  - mov [ecx+00001884],eax
0079546C - C7 81 84180000 00000000 - mov [ecx+00001884],00000000

77e3b8->785cb8->77e2b0->784a83->785c7c->7c08d5->6cbf50->79570d->7204a8->83ebec->852797->4b2f98->837491->7761630a->77617b26-> 


785c7c lea     ecx, [ebx+8,,]
mov     ecx, [eax+8]
784a83 mov     ecx, [ecx+esi*4]


esi:2,5

print_0077A214
mov ecx, 0957bb30
push 00000064
push ecx
CALL 0786330